Grammar

    0 $accept: line $end

    1 line: expr '\n'
    2     | exprFraction '\n'
    3     | exprStrings '\n'
    4     | STRING
    5     | ID
    6     | IF
    7     | THEN
    8     | ELSE
    9     | FOR
   10     | TIMES
   11     | FROM
   12     | INCREASING
   13     | DECREASING
   14     | FRACTION

   15 expr: expr '+' expr
   16     | expr '-' expr
   17     | expr '*' expr
   18     | expr ':' expr
   19     | REAL

   20 exprFraction: exprFraction '+' exprFraction
   21             | exprFraction '-' exprFraction
   22             | exprFraction '*' exprFraction
   23             | exprFraction ':' exprFraction
   24             | FRACTION

   25 exprStrings: exprStrings '+' exprStrings
   26            | STRING


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 1 2 3
    '*' (42) 17 22
    '+' (43) 15 20 25
    '-' (45) 16 21
    ':' (58) 18 23
    error (256)
    ID <lexeme> (258) 5
    REAL <value> (259) 19
    STRING <lexeme> (260) 4 26
    FRACTION <lexeme> (261) 14 24
    IF (262) 6
    THEN (263) 7
    ELSE (264) 8
    FOR (265) 9
    TIMES (266) 10
    FROM (267) 11
    INCREASING (268) 12
    DECREASING (269) 13


Nonterminals, with rules where they appear

    $accept (20)
        on left: 0
    line (21)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14
        on right: 0
    expr <value> (22)
        on left: 15 16 17 18 19
        on right: 1 15 16 17 18
    exprFraction <lexeme> (23)
        on left: 20 21 22 23 24
        on right: 2 20 21 22 23
    exprStrings <lexeme> (24)
        on left: 25 26
        on right: 3 25


State 0

    0 $accept: • line $end

    ID          shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    FRACTION    shift, and go to state 4
    IF          shift, and go to state 5
    THEN        shift, and go to state 6
    ELSE        shift, and go to state 7
    FOR         shift, and go to state 8
    TIMES       shift, and go to state 9
    FROM        shift, and go to state 10
    INCREASING  shift, and go to state 11
    DECREASING  shift, and go to state 12

    line          go to state 13
    expr          go to state 14
    exprFraction  go to state 15
    exprStrings   go to state 16


State 1

    5 line: ID •

    $default  reduce using rule 5 (line)


State 2

   19 expr: REAL •

    $default  reduce using rule 19 (expr)


State 3

    4 line: STRING •
   26 exprStrings: STRING •

    $end      reduce using rule 4 (line)
    $default  reduce using rule 26 (exprStrings)


State 4

   14 line: FRACTION •
   24 exprFraction: FRACTION •

    $end      reduce using rule 14 (line)
    $default  reduce using rule 24 (exprFraction)


State 5

    6 line: IF •

    $default  reduce using rule 6 (line)


State 6

    7 line: THEN •

    $default  reduce using rule 7 (line)


State 7

    8 line: ELSE •

    $default  reduce using rule 8 (line)


State 8

    9 line: FOR •

    $default  reduce using rule 9 (line)


State 9

   10 line: TIMES •

    $default  reduce using rule 10 (line)


State 10

   11 line: FROM •

    $default  reduce using rule 11 (line)


State 11

   12 line: INCREASING •

    $default  reduce using rule 12 (line)


State 12

   13 line: DECREASING •

    $default  reduce using rule 13 (line)


State 13

    0 $accept: line • $end

    $end  shift, and go to state 17


State 14

    1 line: expr • '\n'
   15 expr: expr • '+' expr
   16     | expr • '-' expr
   17     | expr • '*' expr
   18     | expr • ':' expr

    '+'   shift, and go to state 18
    '-'   shift, and go to state 19
    '*'   shift, and go to state 20
    ':'   shift, and go to state 21
    '\n'  shift, and go to state 22


State 15

    2 line: exprFraction • '\n'
   20 exprFraction: exprFraction • '+' exprFraction
   21             | exprFraction • '-' exprFraction
   22             | exprFraction • '*' exprFraction
   23             | exprFraction • ':' exprFraction

    '+'   shift, and go to state 23
    '-'   shift, and go to state 24
    '*'   shift, and go to state 25
    ':'   shift, and go to state 26
    '\n'  shift, and go to state 27


State 16

    3 line: exprStrings • '\n'
   25 exprStrings: exprStrings • '+' exprStrings

    '+'   shift, and go to state 28
    '\n'  shift, and go to state 29


State 17

    0 $accept: line $end •

    $default  accept


State 18

   15 expr: expr '+' • expr

    REAL  shift, and go to state 2

    expr  go to state 30


State 19

   16 expr: expr '-' • expr

    REAL  shift, and go to state 2

    expr  go to state 31


State 20

   17 expr: expr '*' • expr

    REAL  shift, and go to state 2

    expr  go to state 32


State 21

   18 expr: expr ':' • expr

    REAL  shift, and go to state 2

    expr  go to state 33


State 22

    1 line: expr '\n' •

    $default  reduce using rule 1 (line)


State 23

   20 exprFraction: exprFraction '+' • exprFraction

    FRACTION  shift, and go to state 34

    exprFraction  go to state 35


State 24

   21 exprFraction: exprFraction '-' • exprFraction

    FRACTION  shift, and go to state 34

    exprFraction  go to state 36


State 25

   22 exprFraction: exprFraction '*' • exprFraction

    FRACTION  shift, and go to state 34

    exprFraction  go to state 37


State 26

   23 exprFraction: exprFraction ':' • exprFraction

    FRACTION  shift, and go to state 34

    exprFraction  go to state 38


State 27

    2 line: exprFraction '\n' •

    $default  reduce using rule 2 (line)


State 28

   25 exprStrings: exprStrings '+' • exprStrings

    STRING  shift, and go to state 39

    exprStrings  go to state 40


State 29

    3 line: exprStrings '\n' •

    $default  reduce using rule 3 (line)


State 30

   15 expr: expr • '+' expr
   15     | expr '+' expr •
   16     | expr • '-' expr
   17     | expr • '*' expr
   18     | expr • ':' expr

    '*'  shift, and go to state 20
    ':'  shift, and go to state 21

    $default  reduce using rule 15 (expr)


State 31

   15 expr: expr • '+' expr
   16     | expr • '-' expr
   16     | expr '-' expr •
   17     | expr • '*' expr
   18     | expr • ':' expr

    '*'  shift, and go to state 20
    ':'  shift, and go to state 21

    $default  reduce using rule 16 (expr)


State 32

   15 expr: expr • '+' expr
   16     | expr • '-' expr
   17     | expr • '*' expr
   17     | expr '*' expr •
   18     | expr • ':' expr

    $default  reduce using rule 17 (expr)


State 33

   15 expr: expr • '+' expr
   16     | expr • '-' expr
   17     | expr • '*' expr
   18     | expr • ':' expr
   18     | expr ':' expr •

    $default  reduce using rule 18 (expr)


State 34

   24 exprFraction: FRACTION •

    $default  reduce using rule 24 (exprFraction)


State 35

   20 exprFraction: exprFraction • '+' exprFraction
   20             | exprFraction '+' exprFraction •
   21             | exprFraction • '-' exprFraction
   22             | exprFraction • '*' exprFraction
   23             | exprFraction • ':' exprFraction

    '*'  shift, and go to state 25
    ':'  shift, and go to state 26

    $default  reduce using rule 20 (exprFraction)


State 36

   20 exprFraction: exprFraction • '+' exprFraction
   21             | exprFraction • '-' exprFraction
   21             | exprFraction '-' exprFraction •
   22             | exprFraction • '*' exprFraction
   23             | exprFraction • ':' exprFraction

    '*'  shift, and go to state 25
    ':'  shift, and go to state 26

    $default  reduce using rule 21 (exprFraction)


State 37

   20 exprFraction: exprFraction • '+' exprFraction
   21             | exprFraction • '-' exprFraction
   22             | exprFraction • '*' exprFraction
   22             | exprFraction '*' exprFraction •
   23             | exprFraction • ':' exprFraction

    $default  reduce using rule 22 (exprFraction)


State 38

   20 exprFraction: exprFraction • '+' exprFraction
   21             | exprFraction • '-' exprFraction
   22             | exprFraction • '*' exprFraction
   23             | exprFraction • ':' exprFraction
   23             | exprFraction ':' exprFraction •

    $default  reduce using rule 23 (exprFraction)


State 39

   26 exprStrings: STRING •

    $default  reduce using rule 26 (exprStrings)


State 40

   25 exprStrings: exprStrings • '+' exprStrings
   25            | exprStrings '+' exprStrings •

    $default  reduce using rule 25 (exprStrings)
