Grammar

    0 $accept: line $end

    1 line: expr '\n'
    2     | exprFraction '\n'
    3     | STRING '\n'
    4     | ID
    5     | IF
    6     | THEN
    7     | ELSE
    8     | FOR
    9     | TIMES
   10     | FROM
   11     | INCREASING
   12     | DECREASING
   13     | FRACTION

   14 expr: expr '+' expr
   15     | expr '-' expr
   16     | expr '*' expr
   17     | expr ':' expr
   18     | REAL

   19 exprFraction: exprFraction '+' exprFraction
   20             | exprFraction '-' exprFraction
   21             | exprFraction '*' exprFraction
   22             | exprFraction ':' exprFraction
   23             | FRACTION


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 1 2 3
    '*' (42) 16 21
    '+' (43) 14 19
    '-' (45) 15 20
    ':' (58) 17 22
    error (256)
    ID <lexeme> (258) 4
    REAL <value> (259) 18
    STRING <lexeme> (260) 3
    FRACTION <lexeme> (261) 13 23
    IF (262) 5
    THEN (263) 6
    ELSE (264) 7
    FOR (265) 8
    TIMES (266) 9
    FROM (267) 10
    INCREASING (268) 11
    DECREASING (269) 12


Nonterminals, with rules where they appear

    $accept (20)
        on left: 0
    line (21)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13
        on right: 0
    expr <value> (22)
        on left: 14 15 16 17 18
        on right: 1 14 15 16 17
    exprFraction <lexeme> (23)
        on left: 19 20 21 22 23
        on right: 2 19 20 21 22


State 0

    0 $accept: • line $end

    ID          shift, and go to state 1
    REAL        shift, and go to state 2
    STRING      shift, and go to state 3
    FRACTION    shift, and go to state 4
    IF          shift, and go to state 5
    THEN        shift, and go to state 6
    ELSE        shift, and go to state 7
    FOR         shift, and go to state 8
    TIMES       shift, and go to state 9
    FROM        shift, and go to state 10
    INCREASING  shift, and go to state 11
    DECREASING  shift, and go to state 12

    line          go to state 13
    expr          go to state 14
    exprFraction  go to state 15


State 1

    4 line: ID •

    $default  reduce using rule 4 (line)


State 2

   18 expr: REAL •

    $default  reduce using rule 18 (expr)


State 3

    3 line: STRING • '\n'

    '\n'  shift, and go to state 16


State 4

   13 line: FRACTION •
   23 exprFraction: FRACTION •

    $end      reduce using rule 13 (line)
    $default  reduce using rule 23 (exprFraction)


State 5

    5 line: IF •

    $default  reduce using rule 5 (line)


State 6

    6 line: THEN •

    $default  reduce using rule 6 (line)


State 7

    7 line: ELSE •

    $default  reduce using rule 7 (line)


State 8

    8 line: FOR •

    $default  reduce using rule 8 (line)


State 9

    9 line: TIMES •

    $default  reduce using rule 9 (line)


State 10

   10 line: FROM •

    $default  reduce using rule 10 (line)


State 11

   11 line: INCREASING •

    $default  reduce using rule 11 (line)


State 12

   12 line: DECREASING •

    $default  reduce using rule 12 (line)


State 13

    0 $accept: line • $end

    $end  shift, and go to state 17


State 14

    1 line: expr • '\n'
   14 expr: expr • '+' expr
   15     | expr • '-' expr
   16     | expr • '*' expr
   17     | expr • ':' expr

    '+'   shift, and go to state 18
    '-'   shift, and go to state 19
    '*'   shift, and go to state 20
    ':'   shift, and go to state 21
    '\n'  shift, and go to state 22


State 15

    2 line: exprFraction • '\n'
   19 exprFraction: exprFraction • '+' exprFraction
   20             | exprFraction • '-' exprFraction
   21             | exprFraction • '*' exprFraction
   22             | exprFraction • ':' exprFraction

    '+'   shift, and go to state 23
    '-'   shift, and go to state 24
    '*'   shift, and go to state 25
    ':'   shift, and go to state 26
    '\n'  shift, and go to state 27


State 16

    3 line: STRING '\n' •

    $default  reduce using rule 3 (line)


State 17

    0 $accept: line $end •

    $default  accept


State 18

   14 expr: expr '+' • expr

    REAL  shift, and go to state 2

    expr  go to state 28


State 19

   15 expr: expr '-' • expr

    REAL  shift, and go to state 2

    expr  go to state 29


State 20

   16 expr: expr '*' • expr

    REAL  shift, and go to state 2

    expr  go to state 30


State 21

   17 expr: expr ':' • expr

    REAL  shift, and go to state 2

    expr  go to state 31


State 22

    1 line: expr '\n' •

    $default  reduce using rule 1 (line)


State 23

   19 exprFraction: exprFraction '+' • exprFraction

    FRACTION  shift, and go to state 32

    exprFraction  go to state 33


State 24

   20 exprFraction: exprFraction '-' • exprFraction

    FRACTION  shift, and go to state 32

    exprFraction  go to state 34


State 25

   21 exprFraction: exprFraction '*' • exprFraction

    FRACTION  shift, and go to state 32

    exprFraction  go to state 35


State 26

   22 exprFraction: exprFraction ':' • exprFraction

    FRACTION  shift, and go to state 32

    exprFraction  go to state 36


State 27

    2 line: exprFraction '\n' •

    $default  reduce using rule 2 (line)


State 28

   14 expr: expr • '+' expr
   14     | expr '+' expr •
   15     | expr • '-' expr
   16     | expr • '*' expr
   17     | expr • ':' expr

    '*'  shift, and go to state 20
    ':'  shift, and go to state 21

    $default  reduce using rule 14 (expr)


State 29

   14 expr: expr • '+' expr
   15     | expr • '-' expr
   15     | expr '-' expr •
   16     | expr • '*' expr
   17     | expr • ':' expr

    '*'  shift, and go to state 20
    ':'  shift, and go to state 21

    $default  reduce using rule 15 (expr)


State 30

   14 expr: expr • '+' expr
   15     | expr • '-' expr
   16     | expr • '*' expr
   16     | expr '*' expr •
   17     | expr • ':' expr

    $default  reduce using rule 16 (expr)


State 31

   14 expr: expr • '+' expr
   15     | expr • '-' expr
   16     | expr • '*' expr
   17     | expr • ':' expr
   17     | expr ':' expr •

    $default  reduce using rule 17 (expr)


State 32

   23 exprFraction: FRACTION •

    $default  reduce using rule 23 (exprFraction)


State 33

   19 exprFraction: exprFraction • '+' exprFraction
   19             | exprFraction '+' exprFraction •
   20             | exprFraction • '-' exprFraction
   21             | exprFraction • '*' exprFraction
   22             | exprFraction • ':' exprFraction

    '*'  shift, and go to state 25
    ':'  shift, and go to state 26

    $default  reduce using rule 19 (exprFraction)


State 34

   19 exprFraction: exprFraction • '+' exprFraction
   20             | exprFraction • '-' exprFraction
   20             | exprFraction '-' exprFraction •
   21             | exprFraction • '*' exprFraction
   22             | exprFraction • ':' exprFraction

    '*'  shift, and go to state 25
    ':'  shift, and go to state 26

    $default  reduce using rule 20 (exprFraction)


State 35

   19 exprFraction: exprFraction • '+' exprFraction
   20             | exprFraction • '-' exprFraction
   21             | exprFraction • '*' exprFraction
   21             | exprFraction '*' exprFraction •
   22             | exprFraction • ':' exprFraction

    $default  reduce using rule 21 (exprFraction)


State 36

   19 exprFraction: exprFraction • '+' exprFraction
   20             | exprFraction • '-' exprFraction
   21             | exprFraction • '*' exprFraction
   22             | exprFraction • ':' exprFraction
   22             | exprFraction ':' exprFraction •

    $default  reduce using rule 22 (exprFraction)
